name: Deploy to Production

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm test
      
      - name: Run build
        run: npm run build
      
      - name: Run type check
        run: npm run type-check || true
      
      - name: Run lint
        run: npm run lint || true

  deploy-vercel:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      
      - name: Deploy to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
        
      - name: Get Deployment URL
        id: deployment
        run: echo "url=$(vercel ls --token=${{ secrets.VERCEL_TOKEN }} --scope=${{ secrets.VERCEL_ORG_ID }} | grep 'Production' | awk '{print $2}')" >> $GITHUB_OUTPUT

  deploy-websocket:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      
      - name: Deploy to Railway
        uses: bervProject/railway-deploy@main
        with:
          railway_token: ${{ secrets.RAILWAY_TOKEN }}
          service: websocket
        continue-on-error: true
      
      - name: Deploy to Render (Backup)
        if: failure()
        run: |
          curl -X POST https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{"clearCache": false}'

  health-check:
    needs: [deploy-vercel, deploy-websocket]
    runs-on: ubuntu-latest
    steps:
      - name: Wait for deployment
        run: sleep 60
      
      - name: Check Frontend Health
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" https://miro-clone.vercel.app/api/health)
          if [ $response -eq 200 ]; then
            echo "Frontend health check passed"
          else
            echo "Frontend health check failed with status code: $response"
            exit 1
          fi
      
      - name: Check WebSocket Health
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" ${{ secrets.WEBSOCKET_URL }}/health)
          if [ $response -eq 200 ]; then
            echo "WebSocket health check passed"
          else
            echo "WebSocket health check failed with status code: $response"
            exit 1
          fi
        continue-on-error: true
      
      - name: Notify Deployment Status
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          text: 'Production deployment ${{ job.status }}'
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        continue-on-error: true