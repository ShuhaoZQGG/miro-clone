version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: miro-clone-postgres
    environment:
      POSTGRES_USER: miro_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secure_password_change_in_production}
      POSTGRES_DB: miro_clone_db
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=en_US.UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - miro-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U miro_user -d miro_clone_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: miro-clone-redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-secure_redis_password_change_in_production}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - miro-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: miro-clone-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@miro-clone.com
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin_password_change_in_production}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - miro-network
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: miro-clone-redis-commander
    environment:
      REDIS_HOSTS: "local:redis:6379:0:${REDIS_PASSWORD:-secure_redis_password_change_in_production}"
      HTTP_USER: admin
      HTTP_PASSWORD: ${REDIS_COMMANDER_PASSWORD:-commander_password_change_in_production}
    ports:
      - "8081:8081"
    networks:
      - miro-network
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  miro-network:
    driver: bridge